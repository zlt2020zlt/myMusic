(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{203:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前端规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 前端规范")]),t._v(" "),a("p",[t._v("本规范用于规范前端开发。")]),t._v(" "),a("h2",{attrs:{id:"目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),a("p",[t._v("本项目已经为你生成了一个完整的开发框架，提供了涵盖中后台开发的各类功能和坑位，下面是整个项目的目录结构。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("├── build                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建相关")]),t._v("\n├── plop-templates             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基本模板")]),t._v("\n├── public                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 静态资源")]),t._v("\n│   │── favicon.ico            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# favicon图标")]),t._v("\n│   └── index.html             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# html模板")]),t._v("\n├── src                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 源代码")]),t._v("\n│   ├── api                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有请求")]),t._v("\n│   ├── assets                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 主题 字体等静态资源")]),t._v("\n│   ├── components             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局公用组件")]),t._v("\n│   ├── directive              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局指令")]),t._v("\n│   ├── filters                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局 filter")]),t._v("\n│   ├── icons                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 项目所有 svg icons")]),t._v("\n│   ├── lang                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 国际化 language")]),t._v("\n│   ├── layout                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局 layout")]),t._v("\n│   ├── router                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 路由")]),t._v("\n│   ├── store                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局 store管理")]),t._v("\n│   ├── styles                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局样式")]),t._v("\n│   ├── utils                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局公用方法")]),t._v("\n│   ├── vendor                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 公用vendor")]),t._v("\n│   ├── views                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# views 所有页面")]),t._v("\n│   ├── App.vue                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 入口页面")]),t._v("\n│   ├── main.js                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 入口文件 加载组件 初始化等")]),t._v("\n│   └── permission.js          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 权限管理")]),t._v("\n├── .env.xxx                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 环境变量配置")]),t._v("\n├── .eslintrc.js               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# eslint 配置项")]),t._v("\n├── .babelrc                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# babel-loader 配置")]),t._v("\n├── .travis.yml                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自动化CI配置")]),t._v("\n├── vue.config.js              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vue-cli 配置")]),t._v("\n├── postcss.config.js          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# postcss 配置")]),t._v("\n└── package.json               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# package.json")]),t._v("\n")])])]),a("h2",{attrs:{id:"组件名为多个单词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件名为多个单词","aria-hidden":"true"}},[t._v("#")]),t._v(" 组件名为多个单词")]),t._v(" "),a("p",[t._v("组件名应该始终是多个单词的，根组件 App 以及 transition、component之类的 Vue 内置组件除外。这样做可以避免跟现有的以及未来的 HTML 元素相冲突，因为所有的 HTML 元素名称都是单个单词的。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Vue.component('todo-item', {\n  \n})\n")])])]),a("h2",{attrs:{id:"组件的-data-必须是一个函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件的-data-必须是一个函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 组件的 data 必须是一个函数")]),t._v(" "),a("p",[t._v("当在组件中使用 data 属性的时候 (除了 new Vue 外的任何地方)，它的值必须是返回一个对象的函数。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Vue.component('some-comp', {\n  data: function () {\n    return {\n      foo: 'bar'\n    }\n  }\n})\n")])])]),a("h2",{attrs:{id:"prop-定义应该尽量详细"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prop-定义应该尽量详细","aria-hidden":"true"}},[t._v("#")]),t._v(" Prop 定义应该尽量详细")]),t._v(" "),a("p",[t._v("在你提交的代码中，prop 的定义应该尽量详细，至少需要指定其类型。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("props: {\n  status: {\n    type: String,\n    required: true,\n    validator: function (value) {\n      return [\n        'syncing',\n        'synced',\n        'version-conflict',\n        'error'\n      ].indexOf(value) !== -1\n    }\n  }\n}\n")])])]),a("h2",{attrs:{id:"总是用-key-配合-v-for"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总是用-key-配合-v-for","aria-hidden":"true"}},[t._v("#")]),t._v(" 总是用 key 配合 v-for")]),t._v(" "),a("p",[t._v("在组件上总是必须用 key 配合 v-for，以便维护内部组件及其子树的状态。甚至在元素上维护可预测的行为，比如动画中的对象固化 (object constancy)，也是一种好的做法。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<ul>\n  <li\n    v-for="todo in todos"\n    :key="todo.id"\n  >\n    {{ todo.text }}\n  </li>\n</ul>\n')])])]),a("h2",{attrs:{id:"避免-v-if-和-v-for-用在一起"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免-v-if-和-v-for-用在一起","aria-hidden":"true"}},[t._v("#")]),t._v(" 避免-v-if-和-v-for-用在一起")]),t._v(" "),a("p",[t._v("永远不要把 v-if 和 v-for 同时用在同一个元素上。\n一般我们在两种常见的情况下会倾向于这样做：")]),t._v(" "),a("ul",[a("li",[t._v('为了过滤一个列表中的项目 (比如 v-for="user in users" v-if="user.isActive")。在这种情形下，请将 users 替换为一个计算属性 (比如 activeUsers)，让其返回过滤后的列表。')]),t._v(" "),a("li",[t._v('为了避免渲染本应该被隐藏的列表 (比如 v-for="user in users" v-if="shouldShowUsers")。这种情形下，请将 v-if 移动至容器元素上 (比如 ul, ol)。')])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<ul v-if="shouldShowUsers">\n  <li\n    v-for="user in users"\n    :key="user.id"\n  >\n    {{ user.name }}\n  </li>\n</ul>\n')])])]),a("h2",{attrs:{id:"为组件样式设置作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为组件样式设置作用域","aria-hidden":"true"}},[t._v("#")]),t._v(" 为组件样式设置作用域")]),t._v(" "),a("p",[t._v("对于应用来说，顶级 App 组件和布局组件中的样式可以是全局的，但是其它所有组件都应该是有作用域的。\n这条规则只和单文件组件有关。你不一定要使用 scoped 特性。设置作用域也可以通过 CSS Modules，那是一个基于 class 的类似 BEM 的策略，当然你也可以使用其它的库或约定。")]),t._v(" "),a("p",[a("strong",[t._v("避免-v-if-和-v-for-用在一起"),a("br"),t._v("\n不管怎样，对于组件库，我们应该更倾向于选用基于 class 的策略而不是 scoped 特性。")])]),t._v(" "),a("p",[t._v("这让覆写内部样式更容易：使用了常人可理解的 class 名称且没有太高的选择器优先级，而且不太会导致冲突。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<template>\n  <button class="button button-close">X</button>\n</template>\n\n\x3c!-- 使用 `scoped` 特性 --\x3e\n<style scoped>\n.button {\n  border: none;\n  border-radius: 2px;\n}\n\n.button-close {\n  background-color: red;\n}\n</style>\n')])])]),a("h2",{attrs:{id:"私有属性名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#私有属性名","aria-hidden":"true"}},[t._v("#")]),t._v(" 私有属性名")]),t._v(" "),a("p",[t._v("使用模块作用域保持不允许外部访问的函数的私有性。如果无法做到这一点，就始终为插件、混入等不考虑作为对外公共 API 的自定义私有属性使用 $_ 前缀。并附带一个命名空间以回避和其它作者的冲突 (比如 $"),a("em",[t._v("yourPluginName")]),t._v(")。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var myGreatMixin = {\n  // ...\n  methods: {\n    publicMethod() {\n      // ...\n      myPrivateFunction()\n    }\n  }\n}\n\nfunction myPrivateFunction() {\n  // ...\n}\n\nexport default myGreatMixin\n")])])])])},[],!1,null,null,null);s.default=e.exports}}]);